/*
# The name of the tool must be a valid Python identifier (e.g., no spaces).
# This field is mandatory, and will be used as the name of a Python function.
name: lookup_flight_info

# A description for the function bound to this tool.
# This field is mandatory, and will be used in the docstring of a Python function.
description: >
    Find flight routes between two airports with airline and aircraft information.

# The inputs used to resolve the named parameters in the SQL++ query below.
# Inputs are described using a JSON object (given as a string) OR a YAML object that follows the JSON schema standard.
# This field is mandatory, and will be used to build a Pydantic model.
# See https://json-schema.org/learn/getting-started-step-by-step for more info.
input:
    type: object
    properties:
      source_airport:
        type: string
        description: "IATA code for departure airport (e.g., SFO, JFK, LAX)"
      destination_airport:
        type: string
        description: "IATA code for arrival airport (e.g., LAX, JFK, ORD)"
    required: ["source_airport", "destination_airport"]

# The outputs used describe the structure of the SQL++ query result.
# Outputs are described using a JSON object (given as a string) OR a YAML object that follows the JSON schema standard.
# This field is mandatory, and will be used to build a Pydantic model.
output:
    type: array
    items:
      type: object
      properties:
        airline:
          type: string
        route:
          type: string
        equipment:
          type: string

# The "secrets" field defines search keys that will be used to query a "secrets" manager.
# Note that these values are NOT the secrets themselves, rather they are used to lookup secrets.
# Users must specify these variables at runtime as environment variables OR explicitly through a Catalog instance.
secrets:
    # All Couchbase tools (e.g., semantic search, SQL++) must specify conn_string, username, and password.
    - couchbase:
        conn_string: CB_CONN_STRING
        username: CB_USERNAME
        password: CB_PASSWORD
        # certificate: CB_CERTIFICATE
*/

SELECT VALUE {
    "airline": r.airline,
    "route": r.sourceairport || " to " || r.destinationairport,
    "equipment": r.equipment
}
FROM `travel-sample`.inventory.route r
WHERE r.sourceairport = $source_airport AND r.destinationairport = $destination_airport
LIMIT 10;