[project]
name = "flight-search-agent"
version = "0.1.0"
description = "Flight search agent with Agent Catalog integration and LangGraph workflow"
authors = [
    {name = "Agent Catalog Team"}
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    # Agent Catalog dependencies
    "agentc @ ../../agent-catalog/libs/agentc",
    "agentc-core @ ../../agent-catalog/libs/agentc_core",
    "agentc-langchain @ ../../agent-catalog/libs/agentc_integrations/langchain",
    "agentc-langgraph @ ../../agent-catalog/libs/agentc_integrations/langgraph",
    # Observability and monitoring
    "arize>=7.48.1,<8.0.0",
    "arize-otel>=0.9.0,<1.0.0",
    "arize-phoenix[evals]>=11.0.0",
    "openinference-instrumentation-langchain>=0.1.29,<0.2.0",
    "openinference-instrumentation-openai>=0.1.18,<0.2.0",
    
    # CLI and utilities
    "nest-asyncio>=1.6.0,<2.0.0",
    
    # Data processing
    "kagglehub>=0.2.0,<1.0.0",
    "pandas>=2.0.0,<3.0.0",
    
    # LangChain ecosystem
    "langchain-couchbase>=0.4.0,<0.5.0",
    "langchain-openai>=0.3.11,<0.4.0",
    "langchain-nvidia-ai-endpoints>=0.3.13,<0.4.0",
    "langgraph>=0.5.1,<0.6.0",
    
    # Core Python libraries
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.10.1,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0"
]

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
ipykernel = "*"
jupyter = "*"
tqdm = "*"
pytest = "*"
black = "*"
ruff = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "DTZ", "EM", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["S101", "COM812", "ISC001"]

[tool.black]
line-length = 100
target-version = ['py312']
